{"ast":null,"code":"class Auth {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n  authorization(username, password) {\n    return fetch(`${this._url}/signin`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        email: username,\n        password: password\n      })\n    }).then(this._handleResponseAuth);\n  }\n  registration(email, password) {\n    return fetch(`${this._url}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(this._handleResponseAuth);\n  }\n  getInformation(token) {\n    return fetch(`${this._url}/users/me`, {\n      metod: \"GET\",\n      headers: {\n        ...this._headers,\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._handleResponseAuth);\n  }\n  _handleResponseAuth(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n}\nconst auth = new Auth({\n  url: \"https://auth.nomoreparties.co\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-type\": \"application/json\"\n  }\n});\nexport { auth };","map":{"version":3,"names":["Auth","constructor","options","_url","url","_headers","headers","authorization","username","password","fetch","method","body","JSON","stringify","email","then","_handleResponseAuth","registration","getInformation","token","metod","Authorization","res","ok","json","Promise","reject","status","auth","Accept"],"sources":["C:/Users/79282/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["class Auth {\r\n    constructor(options) {\r\n        this._url = options.url;\r\n        this._headers = options.headers;\r\n    }\r\n\r\n    authorization(username, password) {\r\n        return fetch(`${this._url}/signin`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                email: username,\r\n                password: password,\r\n            }),\r\n        }).then(this._handleResponseAuth);\r\n    }\r\n\r\n    registration(email, password) {\r\n        return fetch(`${this._url}/signup`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n            }),\r\n        }).then(this._handleResponseAuth);\r\n    }\r\n\r\n    getInformation(token) {\r\n        return fetch(`${this._url}/users/me`, {\r\n            metod: \"GET\",\r\n            headers: {\r\n                ...this._headers,\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }).then(this._handleResponseAuth);\r\n    }\r\n\r\n    _handleResponseAuth(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n    }\r\n}\r\n\r\nconst auth = new Auth({\r\n    url: \"https://auth.nomoreparties.co\",\r\n    headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\",\r\n    },\r\n});\r\n\r\nexport { auth };\r\n"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACPC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,IAAI,GAAGD,OAAO,CAACE,GAAG;IACvB,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;EACnC;EAEAC,aAAaA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC9B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACP,IAAK,SAAQ,EAAE;MAChCQ,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,KAAK,EAAEP,QAAQ;QACfC,QAAQ,EAAEA;MACd,CAAC;IACL,CAAC,CAAC,CAACO,IAAI,CAAC,IAAI,CAACC,mBAAmB,CAAC;EACrC;EAEAC,YAAYA,CAACH,KAAK,EAAEN,QAAQ,EAAE;IAC1B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACP,IAAK,SAAQ,EAAE;MAChCQ,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,KAAK,EAAEA,KAAK;QACZN,QAAQ,EAAEA;MACd,CAAC;IACL,CAAC,CAAC,CAACO,IAAI,CAAC,IAAI,CAACC,mBAAmB,CAAC;EACrC;EAEAE,cAAcA,CAACC,KAAK,EAAE;IAClB,OAAOV,KAAK,CAAE,GAAE,IAAI,CAACP,IAAK,WAAU,EAAE;MAClCkB,KAAK,EAAE,KAAK;MACZf,OAAO,EAAE;QACL,GAAG,IAAI,CAACD,QAAQ;QAChBiB,aAAa,EAAG,UAASF,KAAM;MACnC;IACJ,CAAC,CAAC,CAACJ,IAAI,CAAC,IAAI,CAACC,mBAAmB,CAAC;EACrC;EAEAA,mBAAmBA,CAACM,GAAG,EAAE;IACrB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACR,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACrB,CAAC,MAAM;MACH,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;IAClD;EACJ;AACJ;AAEA,MAAMC,IAAI,GAAG,IAAI7B,IAAI,CAAC;EAClBI,GAAG,EAAE,+BAA+B;EACpCE,OAAO,EAAE;IACLwB,MAAM,EAAE,kBAAkB;IAC1B,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,SAASD,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}